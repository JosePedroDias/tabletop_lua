for a = 1, 5 do
end
-- 1,2,3,4,5

for a = 1, 10, 2 do
end
-- 1,3,5,7,9

for key, value in pairs(hello) do -- iterate over table keys
for key, value in ipairs(hello) do -- iterate over table keys, numerical order

iterate reverse
for idx = #self.items, 1, -1 do
    local it = self.items[idx]


#tbl => table length (for numeric keys)


table.insert(tbl, k, v)


table.remove(tbl, k)


if expr then
elseif expr then
else
end

function(a, ..rest)
end

== 
~= 
and
or
not

type()
'number'
'function'
'boolean'
'nil'
'string'
'table'


local i, v = next(t)
while i do
  new_t[i] = v
  i, v = next(t, i) 
end


success, returnValue = pcall(f, arg1, arg2...)

nextvars() -- similar but for global variables


local everywhere...


last return on a module is get back if you require()